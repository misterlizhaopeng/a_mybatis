<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
	<!-- mybatis-config.xml配置文件配置时，要注意节点顺序，否则configuration会报红线错误 -->
	<properties resource="jdbc.properties" />
	<settings>
		
		<setting name="mapUnderscoreToCamelCase" value="true" />
		<setting name="jdbcTypeForNull" value="NULL" />

		<!--显示的指定每个我们需要更改的配置的值，即使他是默认的。防止版本更新带来的问题 -->
		<setting name="lazyLoadingEnabled" value="true" />
		<setting name="aggressiveLazyLoading" value="false" />
		
		<!-- 1.开启mybatis二级缓存，默认是开启的 -->
		<!-- <setting name="cacheEnabled" value="false"/> -->
		
	</settings>

	<typeAliases>
		<!--1.typeAlias针对指定的类进行起别名，作用为：让每一个pojo的resultType指向别名即可。 alias的默认值为类的小写，但是别名不区分大小写， 
			但是这样对于一个包中有好多类，要对每一个类起别名，非常麻烦，所以另一种方法:package起别名 -->
		<!-- <typeAlias type="cn.lip.mybatis.bean.Student" /> -->
		<!-- 2.name:为指定的包 ，对于给该包下面的每一个类起的别名也是类的小写形式 如果包下面又有一个子包，也存在相同的名称，如果不做处理，mybatis在通过别名找类名时，会报错，为了解决这个问题， 
			可以给有冲突的类进行特殊注解，用@Alias -->
		<!-- 个人建议，对于sql映射文件下面的 resultType还是起全名比较好，因为当维护一个pojo的resultType时，可以通过鼠标点击到指定的类 -->
		<package name="cn.lip.mybatis.bean" />
	</typeAliases>
	
	<!-- 插件开发 -->
	<plugins>
		<plugin interceptor="cn.lip.mybatis.plugin.TestPlugin">
			<property name="name" value="root"/>
			<property name="pwd" value="root"/>
			<property name="value" value="root-value"/>
		</plugin>
	</plugins>
	
	<environments default="dev_mysql">
		<!-- envirnoments:设置多个环境，让default指定具体开发环境，对应environment的id； environment:为具体的环境，必须具有两个标签：transactionManager，dataSource; 
			针对transactionManager的type和dataSource的type都是mybatis框架起的别名 -->
		<environment id="dev_oracle">
			<transactionManager type="JDBC" />
			<dataSource type="POOLED">
				<property name="driver" value="${orcl.driver}" />
				<property name="url" value="${orcl.url}" />
				<property name="username" value="${orcl.username}" />
				<property name="password" value="${orcl.password}" />
			</dataSource>
		</environment>
		<environment id="dev_mysql">
			<transactionManager type="JDBC" />
			<dataSource type="POOLED">
				<property name="driver" value="${driver}" />
				<property name="url" value="${url}" />
				<property name="username" value="${username}" />
				<property name="password" value="${psw}" />
			</dataSource>
		</environment>
	</environments>
	<databaseIdProvider type="DB_VENDOR">
		<!-- 为不同数据库厂商起别名 ; 作用：就是为不同的【sql映射xml文件】中设置的sql 执行对应数据库厂商的sql语句; sql映射文件节点的写法为:databaseId="mysql"; 
			注意：把MySQL写成MySql，会报错的:"Invalid bound statement (not found): cn.lip.mybatis.dao.IStudent.getStudentById" -->
		<property name="MySQL" value="mysql" />
		<property name="Oracle" value="oracle" />
		<property name="SQL Server" value="sqlserver" />
	</databaseIdProvider>

	<!-- 将sql映射文件 注册到全局配置中 -->
	<mappers>
		<!-- mapper:注册一个sql映射：
				resource:
					引用类路径下的sql配置文件 cn/lip/mybatis/Student.xml 
				url：
					引用网络路径或者磁盘路径下的sql配置映射文件 file:///var/mappers/AuthorMapper.xml 
				class:注册接口 
					1.要有sql映射文件，sql映射文件必须要接口同名称，并且sql映射文件和接口必须在同一个目录下； 
					2.如果没有sql映射文件，所有的sql都是用注解写在接口上的（例子：见接口IStudentAnnotation） 
			推荐： 
				比较重要的，复杂的Dao接口我们来写sql映射文件 
				不重要，简单的Dao接口为了开发快速可以使用注解； -->
		<mapper resource="cn/lip/mybatis/Student.xml" />
		<mapper resource="cn/lip/mybatis/DeptInfo.xml" />
		<mapper class="cn.lip.mybatis.dao.IStudentAnnotation" />
		<!-- <mapper class="" resource="" url=""/> -->
		<!-- 批量注册： -->
		<!-- <package name="com.lp.mybatis.dao"/> -->
	</mappers>
	
</configuration>